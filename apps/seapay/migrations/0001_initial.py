# Generated by Django 5.2.5 on 2025-10-07 10:58

import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SeapayOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PayPaymentIntent",
            fields=[
                (
                    "intent_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("wallet_topup", "Wallet Top-up"),
                            ("order_payment", "Order Payment"),
                            ("symbol_purchase", "Symbol Purchase"),
                            ("withdraw", "Withdraw"),
                        ],
                        db_comment="wallet_topup (nạp ví) | order_payment (mua trực tiếp)",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        db_comment="Số tiền phải trả", decimal_places=2, max_digits=18
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requires_payment_method", "Requires Payment Method"),
                            ("processing", "Processing"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        db_comment="Trạng thái luồng thanh toán",
                        default="requires_payment_method",
                        max_length=30,
                    ),
                ),
                (
                    "order_code",
                    models.CharField(
                        db_comment="Chuỗi đối soát CK (nội dung chuyển khoản). Cần duy nhất để match.",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "reference_code",
                    models.CharField(
                        blank=True,
                        db_comment="Reference code returned by provider for reconciliation",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "return_url",
                    models.TextField(
                        blank=True,
                        db_comment="URL trở về khi thanh toán xong (nếu dùng webflow)",
                        null=True,
                    ),
                ),
                (
                    "cancel_url",
                    models.TextField(
                        blank=True, db_comment="URL trở về khi hủy", null=True
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, db_comment="Hạn sử dụng intent/QR", null=True
                    ),
                ),
                (
                    "qr_code_url",
                    models.TextField(
                        blank=True, db_comment="QR code URL for payment", null=True
                    ),
                ),
                (
                    "deep_link",
                    models.TextField(
                        blank=True, db_comment="Deep link for mobile payment", null=True
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="Payload bổ sung (IP, UA, campaign...)",
                        default=dict,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="Ai đang thanh toán",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_payment_intents",
                "db_table_comment": "Một yêu cầu thu tiền. Provider cố định là SePay (chính sách hệ thống).",
            },
        ),
        migrations.CreateModel(
            name="PayPaymentAttempt",
            fields=[
                (
                    "attempt_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requires_payment_method", "Requires Payment Method"),
                            ("processing", "Processing"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        db_comment="Tiến trình attempt",
                        default="requires_payment_method",
                        max_length=30,
                    ),
                ),
                (
                    "bank_code",
                    models.CharField(
                        blank=True,
                        db_comment="VCB/MB/BIDV... (SePay)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True,
                        db_comment="STK nhận hoặc VA theo đơn",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "account_name",
                    models.CharField(
                        blank=True,
                        db_comment="Tên tài khoản nhận",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "transfer_content",
                    models.TextField(
                        blank=True,
                        db_comment="Nội dung CK chính xác để auto-match",
                        null=True,
                    ),
                ),
                (
                    "transfer_amount",
                    models.DecimalField(
                        blank=True,
                        db_comment="Số tiền hiển thị trên QR (có thể khóa cứng)",
                        decimal_places=2,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "qr_image_url",
                    models.TextField(
                        blank=True,
                        db_comment="Link ảnh QR động VietQR (SePay)",
                        null=True,
                    ),
                ),
                (
                    "qr_svg",
                    models.TextField(
                        blank=True,
                        db_comment="Dữ liệu SVG QR nếu render trực tiếp",
                        null=True,
                    ),
                ),
                (
                    "provider_session_id",
                    models.CharField(
                        blank=True,
                        db_comment="Mã phiên/khoá phía SePay nếu có",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, db_comment="Hết hạn phiên attempt/QR", null=True
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, db_comment="Payload bổ sung", default=dict
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "intent",
                    models.ForeignKey(
                        db_comment="Thuộc intent nào",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="seapay.paypaymentintent",
                    ),
                ),
            ],
            options={
                "db_table": "pay_payment_attempts",
                "db_table_comment": "Một intent có thể có nhiều attempt (tạo lại QR, đổi số tiền...). Provider cố định: SePay.",
            },
        ),
        migrations.CreateModel(
            name="PayPayment",
            fields=[
                (
                    "payment_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        db_comment="Số tiền thanh toán", decimal_places=2, max_digits=18
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requires_payment_method", "Requires Payment Method"),
                            ("processing", "Processing"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        db_comment="Trạng thái chốt sau khi đối soát",
                        default="processing",
                        max_length=30,
                    ),
                ),
                (
                    "provider_payment_id",
                    models.CharField(
                        blank=True,
                        db_comment="ID giao dịch SePay (sepay_tx_id) để tra soát",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True,
                        db_comment="Ghi chú trạng thái (VD: Lý do failed)",
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="Payload bổ sung (bản đồ đối soát, sai số...)",
                        default=dict,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="Người thực hiện thanh toán",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "intent",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Intent dẫn đến payment này",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypaymentintent",
                    ),
                ),
            ],
            options={
                "db_table": "pay_payments",
                "db_table_comment": "Bút toán thanh toán ở cấp gateway. Khi succeeded: nếu là nạp ví -> ghi credit ledger; nếu là order -> chuyển order sang paid, cấp license.",
            },
        ),
        migrations.CreateModel(
            name="PayBankTransaction",
            fields=[
                (
                    "sepay_tx_id",
                    models.BigIntegerField(
                        db_comment="Khớp với provider_payment_id khi đã xử lý",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_date",
                    models.DateTimeField(db_comment="Thời gian giao dịch ngân hàng"),
                ),
                (
                    "account_number",
                    models.CharField(db_comment="STK nhận tiền", max_length=50),
                ),
                (
                    "amount_in",
                    models.DecimalField(
                        db_comment="Tiền vào (nạp ví/ thanh toán)",
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=20,
                    ),
                ),
                (
                    "amount_out",
                    models.DecimalField(
                        db_comment="Tiền ra (ít dùng)",
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=20,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        blank=True,
                        db_comment="Nội dung CK (chứa order_code để auto-match)",
                        null=True,
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True,
                        db_comment="Mã tham chiếu của ngân hàng",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "bank_code",
                    models.CharField(
                        blank=True,
                        db_comment="VCB/MB/BIDV...",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Payment được tạo/chốt từ giao dịch này",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypayment",
                    ),
                ),
                (
                    "attempt",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Khớp được attempt nào",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypaymentattempt",
                    ),
                ),
                (
                    "intent",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Khớp được intent nào",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypaymentintent",
                    ),
                ),
            ],
            options={
                "db_table": "pay_bank_transactions",
                "db_table_comment": "Bảng đối soát chủ động từ API SePay: id, số tiền, nội dung, tham chiếu...",
            },
        ),
        migrations.CreateModel(
            name="PaySepayWebhookEvent",
            fields=[
                (
                    "webhook_event_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "sepay_tx_id",
                    models.BigIntegerField(
                        db_comment="ID duy nhất từ SePay để idempotent (tránh xử lý trùng)",
                        unique=True,
                    ),
                ),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                (
                    "payload",
                    models.JSONField(
                        db_comment="Lưu nguyên phần thân webhook để debug/đối soát"
                    ),
                ),
                (
                    "processed",
                    models.BooleanField(
                        db_comment="Đã xử lý phát sinh payment/ledger chưa",
                        default=False,
                    ),
                ),
                (
                    "process_error",
                    models.TextField(
                        blank=True,
                        db_comment="Thông tin lỗi nếu xử lý thất bại",
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "pay_sepay_webhook_events",
                "db_table_comment": "Inbox webhook của SePay. Ta luôn lưu thô trước, sau đó mới parse và xử lý để đảm bảo an toàn.",
                "indexes": [
                    models.Index(
                        fields=["sepay_tx_id"], name="idx_sepay_webhooks_tx_id"
                    ),
                    models.Index(
                        fields=["processed"], name="idx_sepay_webhooks_processed"
                    ),
                    models.Index(
                        fields=["received_at"], name="idx_sepay_webhooks_received"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PaySymbolOrder",
            fields=[
                (
                    "order_id",
                    models.UUIDField(
                        db_comment="ID đơn hàng",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        db_comment="Tổng tiền cần trả cho đơn",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending_payment", "Pending Payment"),
                            ("paid", "Paid"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        db_comment="Trạng thái vòng đời đơn",
                        default="pending_payment",
                        max_length=20,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("wallet", "Wallet Balance"),
                            ("sepay_transfer", "SePay Transfer (QR/Bank)"),
                        ],
                        db_comment="wallet (trừ ví) hoặc sepay_transfer (QR/STK)",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, db_comment="Mô tả/ghi chú đơn hàng", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "payment_intent",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Payment intent cho SePay transfer",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paypaymentintent",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="Người mua quyền truy cập symbol",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_symbol_orders",
                "db_table_comment": "Đơn hàng để mua quyền truy cập symbol. Có thể thanh toán trực tiếp qua SePay hoặc trừ ví nếu đã nạp.",
            },
        ),
        migrations.AddField(
            model_name="paypaymentintent",
            name="order",
            field=models.ForeignKey(
                blank=True,
                db_comment="Liên kết nếu là thanh toán đơn",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="seapay.paysymbolorder",
            ),
        ),
        migrations.AddField(
            model_name="paypayment",
            name="order",
            field=models.ForeignKey(
                blank=True,
                db_comment="Đơn hàng liên quan (nếu có)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="seapay.paysymbolorder",
            ),
        ),
        migrations.CreateModel(
            name="PaySymbolOrderItem",
            fields=[
                (
                    "order_item_id",
                    models.UUIDField(
                        db_comment="ID item đơn hàng",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "symbol_id",
                    models.BigIntegerField(db_comment="Symbol là sản phẩm được bán"),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_comment="Đơn giá tại thời điểm mua",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "license_days",
                    models.IntegerField(
                        blank=True,
                        db_comment="Số ngày cấp quyền sử dụng symbol; null = trọn đời",
                        null=True,
                    ),
                ),
                (
                    "auto_renew",
                    models.BooleanField(
                        db_comment="Mark this order item as enrolled in auto-renew",
                        default=False,
                    ),
                ),
                (
                    "cycle_days_override",
                    models.PositiveIntegerField(
                        blank=True,
                        db_comment="Override renewal cycle in days; None uses subscription default",
                        null=True,
                    ),
                ),
                (
                    "auto_renew_price",
                    models.DecimalField(
                        blank=True,
                        db_comment="Override price for subsequent renewals; None uses current price",
                        decimal_places=2,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="Thuộc tính thêm (phiên bản, biến thể, ...)",
                        default=dict,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        db_comment="Đơn hàng chính",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="seapay.paysymbolorder",
                    ),
                ),
            ],
            options={
                "db_table": "pay_symbol_order_items",
                "db_table_comment": "Chi tiết từng dòng sản phẩm trong đơn: symbol nào, thời hạn bao lâu.",
            },
        ),
        migrations.CreateModel(
            name="PayUserSymbolLicense",
            fields=[
                (
                    "license_id",
                    models.UUIDField(
                        db_comment="ID license",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "symbol_id",
                    models.BigIntegerField(db_comment="Symbol được cấp quyền"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("suspended", "Suspended"),
                            ("revoked", "Revoked"),
                        ],
                        db_comment="Trạng thái quyền dùng symbol",
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "start_at",
                    models.DateTimeField(
                        db_comment="Thời điểm kích hoạt",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "end_at",
                    models.DateTimeField(
                        blank=True,
                        db_comment="Thời điểm hết hạn; null = trọn đời",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Đơn hàng tạo ra license này",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paysymbolorder",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="User được cấp quyền",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_user_symbol_licenses",
                "db_table_comment": "Quyền sử dụng symbol để quyết định ai được nhận tín hiệu.",
            },
        ),
        migrations.CreateModel(
            name="PayWallet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        db_comment="Số dư hiện tại, chỉ cập nhật qua ledger",
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=18,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("VND", "Vietnamese Dong"), ("USD", "US Dollar")],
                        db_comment="Loại tiền (VNĐ, USD...)",
                        default="VND",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("suspended", "Suspended")],
                        db_comment="active | suspended (khóa tạm thời)",
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="Chủ ví",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_wallets",
                "db_table_comment": "Mỗi user có 1 ví / 1 loại tiền. Tất cả thay đổi số dư đi qua pay_wallet_ledger.",
            },
        ),
        migrations.CreateModel(
            name="PayWalletLedger",
            fields=[
                (
                    "ledger_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tx_type",
                    models.CharField(
                        choices=[
                            ("deposit", "Nạp tiền (từ SePay)"),
                            ("purchase", "Mua bot"),
                            ("refund", "Hoàn tiền"),
                            ("withdrawal", "Rút tiền"),
                            ("transfer_in", "Chuyển đến"),
                            ("transfer_out", "Chuyển đi"),
                        ],
                        db_comment="Loại biến động: nạp/purchase/hoàn tiền/...",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        db_comment="Luôn > 0; chiều thể hiện bằng is_credit",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "is_credit",
                    models.BooleanField(db_comment="true: cộng ví; false: trừ ví"),
                ),
                (
                    "balance_before",
                    models.DecimalField(
                        db_comment="Số dư trước giao dịch",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "balance_after",
                    models.DecimalField(
                        db_comment="Số dư ngay sau giao dịch này",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "note",
                    models.TextField(
                        blank=True, db_comment="Diễn giải ngắn gọn cho bản ghi sổ cái"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="Payload bổ sung: ip, device, source, ...",
                        default=dict,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Liên kết đơn hàng khi là purchase/refund",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="seapay.paysymbolorder",
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Bắt buộc với deposit (nạp qua SePay)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ledger_entries",
                        to="seapay.paypayment",
                    ),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        db_comment="Ví bị ảnh hưởng",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ledger_entries",
                        to="seapay.paywallet",
                    ),
                ),
            ],
            options={
                "db_table": "pay_wallet_ledger",
                "db_table_comment": "Quy tắc: deposit phải có payment_id (SePay); purchase phải có order_id. Sổ cái là nguồn sự thật để tính balance.",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PayOrder",
            fields=[
                (
                    "order_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        db_comment="Tổng giá trị đơn hàng",
                        decimal_places=2,
                        max_digits=18,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        db_comment="Trạng thái đơn hàng",
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, db_comment="Mô tả đơn hàng"),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        db_comment="Dữ liệu bổ sung của đơn hàng",
                        default=dict,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        db_comment="Người tạo đơn hàng",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pay_orders",
                "db_table_comment": "Đơn hàng có thể được thanh toán qua payment intents.",
                "indexes": [
                    models.Index(fields=["user"], name="idx_pay_orders_user"),
                    models.Index(fields=["status"], name="idx_pay_orders_status"),
                    models.Index(fields=["created_at"], name="idx_pay_orders_created"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="paypaymentattempt",
            index=models.Index(fields=["intent"], name="idx_pay_attempts_intent"),
        ),
        migrations.AddIndex(
            model_name="paybanktransaction",
            index=models.Index(fields=["intent"], name="idx_bank_tx_intent"),
        ),
        migrations.AddIndex(
            model_name="paybanktransaction",
            index=models.Index(
                fields=["reference_number"], name="idx_bank_tx_reference"
            ),
        ),
        migrations.AddIndex(
            model_name="paybanktransaction",
            index=models.Index(fields=["account_number"], name="idx_bank_tx_account"),
        ),
        migrations.AddIndex(
            model_name="paysymbolorder",
            index=models.Index(
                fields=["user", "status"], name="idx_symbol_orders_user_status"
            ),
        ),
        migrations.AddIndex(
            model_name="paysymbolorder",
            index=models.Index(fields=["status"], name="idx_symbol_orders_status"),
        ),
        migrations.AddIndex(
            model_name="paysymbolorder",
            index=models.Index(fields=["created_at"], name="idx_symbol_orders_created"),
        ),
        migrations.AddIndex(
            model_name="paypaymentintent",
            index=models.Index(
                fields=["user", "status"], name="idx_pay_intents_user_status"
            ),
        ),
        migrations.AddIndex(
            model_name="paypaymentintent",
            index=models.Index(fields=["order"], name="idx_pay_intents_order"),
        ),
        migrations.AddIndex(
            model_name="paypayment",
            index=models.Index(
                fields=["user", "created_at"], name="idx_pay_payments_user_created"
            ),
        ),
        migrations.AddIndex(
            model_name="paypayment",
            index=models.Index(fields=["intent"], name="idx_pay_payments_intent"),
        ),
        migrations.AddIndex(
            model_name="paypayment",
            index=models.Index(fields=["order"], name="idx_pay_payments_order"),
        ),
        migrations.AddIndex(
            model_name="paysymbolorderitem",
            index=models.Index(fields=["order"], name="idx_symbol_order_items_order"),
        ),
        migrations.AddIndex(
            model_name="paysymbolorderitem",
            index=models.Index(
                fields=["symbol_id"], name="idx_symbol_order_items_symbol"
            ),
        ),
        migrations.AddIndex(
            model_name="payusersymbollicense",
            index=models.Index(
                fields=["user", "symbol_id"], name="idx_symbol_lic_user_symbol"
            ),
        ),
        migrations.AddIndex(
            model_name="payusersymbollicense",
            index=models.Index(fields=["status"], name="idx_symbol_lic_status"),
        ),
        migrations.AddIndex(
            model_name="payusersymbollicense",
            index=models.Index(fields=["end_at"], name="idx_symbol_lic_end_at"),
        ),
        migrations.AlterUniqueTogether(
            name="payusersymbollicense",
            unique_together={("user", "symbol_id", "start_at")},
        ),
        migrations.AddIndex(
            model_name="paywallet",
            index=models.Index(fields=["user"], name="idx_pay_wallets_user"),
        ),
        migrations.AddConstraint(
            model_name="paywallet",
            constraint=models.UniqueConstraint(
                fields=("user",), name="unique_user_wallet"
            ),
        ),
        migrations.AddIndex(
            model_name="paywalletledger",
            index=models.Index(
                fields=["wallet", "created_at"], name="idx_ledger_wallet_created"
            ),
        ),
        migrations.AddIndex(
            model_name="paywalletledger",
            index=models.Index(fields=["payment"], name="idx_ledger_payment"),
        ),
        migrations.AddIndex(
            model_name="paywalletledger",
            index=models.Index(fields=["tx_type"], name="idx_ledger_tx_type"),
        ),
        migrations.AddIndex(
            model_name="paywalletledger",
            index=models.Index(fields=["order"], name="idx_ledger_order"),
        ),
    ]
